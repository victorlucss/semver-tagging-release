name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm install

      - name: Install Changesets
        run: npm install --save-dev @changesets/cli

      - name: Calculate version from conventional commits
        id: semver
        uses: ietf-tools/semver-action@v1
        with:
          token: ${{ github.token }}
          branch: main
          tagFilter: ^([0-9]+\.[0-9]+\.[0-9]+)$
          noNewCommitBehavior: current
          noVersionBumpBehavior: current

      - name: Check if version bump needed
        id: check
        run: |
          CURRENT=$(node -p "require('./package.json').version")
          NEXT="${{ steps.semver.outputs.nextStrict }}"
          echo "current=${CURRENT}" >> $GITHUB_OUTPUT
          echo "next=${NEXT}" >> $GITHUB_OUTPUT
          if [ "$CURRENT" = "$NEXT" ]; then
            echo "bump=false" >> $GITHUB_OUTPUT
            echo "No version bump needed"
          else
            echo "bump=true" >> $GITHUB_OUTPUT
            echo "Version bump needed: ${CURRENT} â†’ ${NEXT}"
          fi

      - name: Generate changeset from conventional commits
        if: steps.check.outputs.bump == 'true'
        env:
          VERSION: ${{ steps.semver.outputs.nextStrict }}
          BUMP_TYPE: ${{ steps.semver.outputs.bump }}
        run: |
          # Create changeset file automatically from conventional commits
          CHANGESET_ID=$(date +%s)
          mkdir -p .changeset
          
          # Get commits since last tag
          PREV_TAG="${{ steps.semver.outputs.current }}"
          if [ -z "$PREV_TAG" ]; then
            PREV_TAG=$(git tag --sort=-creatordate | head -n1)
          fi
          
          # Generate changelog from commits
          COMMITS=$(git log --no-merges --pretty=format:"- %s" "${PREV_TAG}..HEAD" | grep -v 'chore(release)' || echo "- No changes")
          
          # Create changeset file
          cat > ".changeset/${CHANGESET_ID}-auto-release.md" << EOF
          ---
          "semver": ${BUMP_TYPE}
          ---
          
          $COMMITS
          EOF
          
          echo "Created changeset: .changeset/${CHANGESET_ID}-auto-release.md"

      - name: Use Changesets to update package.json and changelog
        if: steps.check.outputs.bump == 'true'
        uses: changesets/action@v1
        with:
          version: npx changeset version
          commit: "chore(release): version packages"
          title: "Release ${{ steps.semver.outputs.nextStrict }}"
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Auto-merge changeset PR
        if: steps.check.outputs.bump == 'true'
        run: |
          # Get the PR number from changeset action
          PR_NUMBER=$(gh pr list --head main --json number --jq '.[0].number' || echo "")
          if [ -n "$PR_NUMBER" ]; then
            echo "Auto-merging PR #$PR_NUMBER"
            gh pr merge $PR_NUMBER --merge --delete-branch
          fi
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Create tag after changeset merge
        if: steps.check.outputs.bump == 'true'
        env:
          VERSION: ${{ steps.semver.outputs.nextStrict }}
        run: |
          git tag -a "${VERSION}" -m "${VERSION}"
          git push origin "${VERSION}"

      - name: Create GitHub Release
        if: steps.check.outputs.bump == 'true'
        uses: ncipollo/release-action@v1.13.0
        with:
          tag: ${{ steps.semver.outputs.nextStrict }}
          name: ${{ steps.semver.outputs.nextStrict }}
          bodyFile: CHANGELOG.md
          token: ${{ github.token }}
          allowUpdates: true
          draft: false
          makeLatest: true
