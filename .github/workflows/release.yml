name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm install


      - name: Calculate version from conventional commits
        id: semver
        uses: ietf-tools/semver-action@v1
        with:
          token: ${{ github.token }}
          branch: main
          tagFilter: ^([0-9]+\.[0-9]+\.[0-9]+)$
          noNewCommitBehavior: current
          noVersionBumpBehavior: current

      - name: Check if version bump needed
        id: check
        run: |
          CURRENT=$(node -p "require('./package.json').version")
          NEXT="${{ steps.semver.outputs.nextStrict }}"
          echo "current=${CURRENT}" >> $GITHUB_OUTPUT
          echo "next=${NEXT}" >> $GITHUB_OUTPUT
          if [ "$CURRENT" = "$NEXT" ]; then
            echo "bump=false" >> $GITHUB_OUTPUT
            echo "No version bump needed"
          else
            echo "bump=true" >> $GITHUB_OUTPUT
            echo "Version bump needed: ${CURRENT} â†’ ${NEXT}"
          fi


      - name: Update package.json version
        if: steps.check.outputs.bump == 'true'
        env:
          VERSION: ${{ steps.semver.outputs.nextStrict }}
        run: |
          # Update package.json version
          npm version $VERSION --no-git-tag-version
          echo "Updated package.json to version $VERSION"

      - name: Update CHANGELOG.md
        if: steps.check.outputs.bump == 'true'
        env:
          VERSION: ${{ steps.semver.outputs.nextStrict }}
          PREV_TAG: ${{ steps.semver.outputs.current }}
        run: |
          # Get commits since last tag
          if [ -z "$PREV_TAG" ]; then
            PREV_TAG=$(git tag --sort=-creatordate | head -n1)
          fi
          
          # Generate changelog from commits
          COMMITS=$(git log --no-merges --pretty=format:"- %s" "${PREV_TAG}..HEAD" | grep -v 'chore(release)' || echo "- No changes")
          
          # Create changelog entry
          CHANGELOG_ENTRY="## [$VERSION] - $(date +%Y-%m-%d)

          $COMMITS

          "
          
          # Prepend to CHANGELOG.md
          if [ -f "CHANGELOG.md" ]; then
            echo -e "$CHANGELOG_ENTRY$(cat CHANGELOG.md)" > CHANGELOG.md
          else
            echo -e "$CHANGELOG_ENTRY" > CHANGELOG.md
          fi
          
          echo "Updated CHANGELOG.md"

      - name: Commit version changes
        if: steps.check.outputs.bump == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add package.json CHANGELOG.md
          git commit -m "chore(release): version packages"
          git push origin main

      - name: Create tag after changeset merge
        if: steps.check.outputs.bump == 'true'
        env:
          VERSION: ${{ steps.semver.outputs.nextStrict }}
        run: |
          git tag -a "${VERSION}" -m "${VERSION}"
          git push origin "${VERSION}"

      - name: Create GitHub Release
        if: steps.check.outputs.bump == 'true'
        uses: ncipollo/release-action@v1.13.0
        with:
          tag: ${{ steps.semver.outputs.nextStrict }}
          name: ${{ steps.semver.outputs.nextStrict }}
          bodyFile: CHANGELOG.md
          token: ${{ github.token }}
          allowUpdates: true
          draft: false
          makeLatest: true
